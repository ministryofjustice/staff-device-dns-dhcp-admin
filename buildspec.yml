version: 0.2

env:
  variables:
    DB_PORT: 3306
    RACK_ENV: "production"
    ENV: ${ENV}
  parameter-store:
    DB_USER: "/codebuild/dhcp/$ENV/admin/db/username"
    DB_PASS: "/codebuild/dhcp/$ENV/admin/db/password"
    DB_HOST: "/codebuild/dhcp/$ENV/admin/db/hostname"
    DB_NAME: "/codebuild/dhcp/$ENV/admin/db/name"
    REGISTRY_URL: "/codebuild/dhcp/$ENV/ecr/endpoint"
    TARGET_AWS_ACCOUNT_ID: "/codebuild/$ENV/account_id"
    SECRET_KEY_BASE: "/codebuild/dhcp/admin/rails_master_key"
    ROLE_ARN: "/codebuild/pttp-ci-infrastructure-core-pipeline/${ENV}/assume_role"

phases:
  install:
    commands:
      - echo none

  build:
    commands:
      - make deploy
      - TEMP_ROLE=`aws sts assume-role --role-arn $ROLE_ARN --role-session-name test-$BUILD_ID`
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - make migrate
